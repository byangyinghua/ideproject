<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  -->
<mapper namespace="UrgencyTask">
<resultMap id="UrgencyTaskResult" type="java.util.HashMap">
	<result column="id" property="id" jdbcType="BIGINT"/>
	<result column="urgency_id" property="urgency_id" jdbcType="VARCHAR"/>
	<result column="title" property="title" jdbcType="VARCHAR"/>
	<result column="content" property="content" jdbcType="VARCHAR"/>
	<result column="start_time" property="start_time" jdbcType="DATE" />
	<result column="create_time" property="create_time" jdbcType="DATE" />
	<result column="update_time" property="update_time" jdbcType="TIMESTAMP"/>
	<result column="creator" property="creator" jdbcType="VARCHAR"/>
	<result column="creator_uid" property="creator_uid" jdbcType="VARCHAR"/>
</resultMap>
<resultMap id="UrgencyTaskResultEntity" type="bzl.entity.UrgencyTask">
	<result column="id" property="id" jdbcType="BIGINT"/>
	<result column="urgency_id" property="urgency_id" jdbcType="VARCHAR"/>
	<result column="title" property="title" jdbcType="VARCHAR"/>
	<result column="content" property="content" jdbcType="VARCHAR"/>
	<result column="start_time" property="start_time" jdbcType="DATE" />
	<result column="create_time" property="create_time" jdbcType="DATE" />
	<result column="update_time" property="update_time" jdbcType="TIMESTAMP"/>
	<result column="creator" property="creator" jdbcType="VARCHAR"/>
	<result column="creator_uid" property="creator_uid" jdbcType="VARCHAR"/>
</resultMap>
<parameterMap id="UrgencyTaskParam" type="java.util.HashMap">
</parameterMap>
<parameterMap id="UrgencyTaskEntity" type="bzl.entity.UrgencyTask">
</parameterMap>
<sql id="mysql">
	id,urgency_id,title,content,start_time,creator,creator_uid,create_time,update_time
</sql>
<select id="selectByPK" parameterMap="UrgencyTaskParam"
resultMap="UrgencyTaskResult">
  	 	select <include refid="mysql"/> from t_urgency_task where urgency_id = #{urgency_id}
</select>
<select id="selectAll" resultMap="UrgencyTaskResult">
  	select <include refid="mysql"/> from t_urgency_task
	<if test="sort != null">
		order by ${sort}
	</if>
	<if test="order != null">
			${order}
	</if>
</select>
<!-- 动态查询 -->
<select id="selectByCondition" parameterMap="UrgencyTaskParam" resultMap="UrgencyTaskResult">
	select <include refid="mysql"/> from t_urgency_task
		<include refid="sqlwhere"/>
	<if test="sort != null">
		order by ${sort}
	</if>
	<if test="order != null">
			${order}
	</if>
</select>
<!-- 动态sql -->
<select id="selectCountByCondition" parameterMap="UrgencyTaskParam" resultType="java.util.HashMap">
	select count(1) count from t_urgency_task
	<include refid="sqlwhere"/>
</select>
<!-- 动态获得本页统计 -->
<select id="selectPageCountByCondition" parameterMap="UrgencyTaskParam" resultType="java.util.HashMap">
	select count(1) count from t_urgency_task
	<include refid="sqlwhere"/>
	limit ${startrom},${pagesize}
	</select>
<!-- 动态分页sql -->
<select id="selectByConditionWithPage" parameterMap="UrgencyTaskParam" resultMap="UrgencyTaskResult">
	select <include refid="mysql"/> from t_urgency_task
	<include refid="sqlwhere"/>
	<if test="sort != null">
		order by ${sort}
		</if>
	<if test="order != null">
			${order}
	</if>
	limit ${startrom},${pagesize}
</select>
<!-- 动态统计已删除记录-->
<select id="selectDelCountByCondition" parameterMap="UrgencyTaskParam" resultType="java.util.HashMap">
	select count(1) count from t_urgency_task
	<include refid="sqlwhere"/>
</select>
<!-- 动态查询已删除记录分页-->
<select id="selectDelByConditionWithPage" parameterMap="UrgencyTaskParam" resultMap="UrgencyTaskResult">
	select <include refid="mysql"/> from t_urgency_task
	<include refid="sqlwhere"/>
	<if test="sort != null">
		order by ${sort}
	</if>
	<if test="order != null">
			${order}
	</if>
	limit ${startrom},${pagesize}
</select>
<insert id="insert" parameterMap="UrgencyTaskParam" useGeneratedKeys="true">
<![CDATA[
      insert into t_urgency_task(urgency_id,title,content,creator,creator_uid,start_time,create_time) values(#{urgency_id},#{title},#{content},#{creator},#{creator_uid},#{start_time},#{create_time})
    ]]>
</insert>
<delete id="delete" parameterMap="UrgencyTaskParam">
 delete from t_urgency_task 
 <include refid="sqlwhere"/> 
</delete>
<!-- 批量删除 -->
<delete id="deleteBat" parameterMap="UrgencyTaskParam">
    delete from t_urgency_task where
     	urgency_id in 
		<foreach item="item" index="index" collection="urgency_ids"  open="(" separator="," close=")">
	      #{item}
 	 </foreach>
 </delete>
 
<!-- 动态更新 -->
<update id="update"  parameterMap="UrgencyTaskParam">
	update t_urgency_task 
	<set>
		<if test="title != null">
			title = #{title},
		</if>
		<if test="content != null">
			content = #{content},
		</if>
		<if test="start_time != null">
			start_time = #{start_time}
		</if>
	</set>
	where urgency_id = #{urgency_id}
</update>
<sql id="sqlwhere">
	<where>
	     <if test="urgency_id != null">
			 urgency_id = #{urgency_id}
		</if>
		<if test="start_time != null">
			 and start_time = #{start_time}
		</if>
		<if test="creator != null">
				and creator = #{creator}
		</if>
		<if test="creator_uid != null">
				and creator_uid = #{creator_uid}
		</if>
		<if test="creator_uids != null">
			 and creator_uid in
			<foreach item="item" index="index" collection="creator_uids"  open="(" separator="," close=")">
	            #{item}
 	        </foreach>
		</if>
	</where>
</sql>

</mapper>
