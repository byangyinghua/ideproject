<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  -->
<mapper namespace="LoginLog">
<resultMap id="LoginLogResult" type="java.util.HashMap">
	<result column="id" property="id" jdbcType="BIGINT"/>
	<result column="uid" property="uid" jdbcType="VARCHAR"/>
	<result column="username" property="username" jdbcType="VARCHAR"/>
	<result column="realname" property="realname" jdbcType="VARCHAR"/>
	<result column="login_type" property="login_type" jdbcType="CHAR"/>
	<result column="login_time" property="login_time" jdbcType="DATE"/>
	<result column="login_ip" property="login_ip" jdbcType="VARCHAR"/>
	<result column="create_time" property="create_time" jdbcType="TIMESTAMP"/>
</resultMap>
<resultMap id="LoginLogResultEntity" type="bzl.entity.LoginLog">
	<result column="id" property="id" jdbcType="BIGINT"/>
	<result column="uid" property="uid" jdbcType="VARCHAR"/>
	<result column="username" property="username" jdbcType="VARCHAR"/>
	<result column="realname" property="realname" jdbcType="VARCHAR"/>
	<result column="login_type" property="login_type" jdbcType="CHAR"/>
	<result column="login_time" property="login_time" jdbcType="DATE"/>
	<result column="login_ip" property="login_ip" jdbcType="VARCHAR"/>
	<result column="create_time" property="create_time" jdbcType="TIMESTAMP"/>
</resultMap>
<parameterMap id="LoginLogParam" type="java.util.HashMap">
</parameterMap>
<parameterMap id="LoginLogEntity" type="bzl.entity.LoginLog">
</parameterMap>
<sql id="mysql">
	id,uid,username,realname,login_type,login_time,login_ip,date_format(create_time,'%Y-%c-%d %H:%i:%s') AS create_time 
</sql>
<select id="selectByPK" parameterMap="LoginLogParam"
resultMap="LoginLogResult">
  	 	select <include refid="mysql"/> from t_login_log where id = #{id}
</select>
<select id="selectAll" resultMap="LoginLogResult">
  	select <include refid="mysql"/> from t_login_log
	<if test="sort != null">
		order by ${sort}
	</if>
	<if test="order != null">
			${order}
	</if>
</select>
<!-- 动态查询 -->
<select id="selectByCondition" parameterMap="LoginLogParam" resultMap="LoginLogResult">
	select <include refid="mysql"/> from t_login_log
		<include refid="sqlwhere"/>
	<if test="sort != null">
		order by ${sort}
	</if>
	<if test="order != null">
			${order}
	</if>
</select>
<!-- 动态sql -->
<select id="selectCountByCondition" parameterMap="LoginLogParam" resultType="java.util.HashMap">
	select count(1) count from t_login_log
	<include refid="sqlwhere"/>
</select>
<!-- 动态获得本页统计 -->
<select id="selectPageCountByCondition" parameterMap="LoginLogParam" resultType="java.util.HashMap">
	select count(1) count from t_login_log
	<include refid="sqlwhere"/>
	limit ${startrom},${pagesize}
	</select>
<!-- 动态分页sql -->
<select id="selectByConditionWithPage" parameterMap="LoginLogParam" resultMap="LoginLogResult">
	select <include refid="mysql"/> from t_login_log
	<include refid="sqlwhere"/>
	<if test="sort != null">
		order by ${sort}
		</if>
	<if test="order != null">
			${order}
	</if>
	limit ${startrom},${pagesize}
</select>
<!-- 动态统计已删除记录-->
<select id="selectDelCountByCondition" parameterMap="LoginLogParam" resultType="java.util.HashMap">
	select count(1) count from t_login_log
	<include refid="sqlwhere"/>
</select>
<!-- 动态查询已删除记录分页-->
<select id="selectDelByConditionWithPage" parameterMap="LoginLogParam" resultMap="LoginLogResult">
	select <include refid="mysql"/> from t_login_log
	<include refid="sqlwhere"/>
	<if test="sort != null">
		order by ${sort}
	</if>
	<if test="order != null">
			${order}
	</if>
	limit ${startrom},${pagesize}
</select>
<insert id="insert" parameterMap="LoginLogParam" useGeneratedKeys="true">
<![CDATA[
      insert into t_login_log(uid,username,realname,login_type,login_time,login_ip) values(#{uid},#{username},#{realname},#{login_type},#{login_time},#{login_ip})
    ]]>
</insert>
<delete id="delete" parameterMap="LoginLogParam">
  <![CDATA[
    delete from t_login_log where id = #{id}
  ]]>
</delete>
<!-- 批量删除 -->
<delete id="deleteBat" parameterMap="LoginLogParam">
    delete from t_login_log where
     	id in 
		<foreach item="item" index="index" collection="id"  open="(" separator="," close=")">
	      #{item}
 	 </foreach>
 </delete>
<!-- 动态更新 -->
<update id="update"  parameterMap="LoginLogParam">
	update t_login_log 
	<set>
		<if test="uid != null">
			uid = #{uid},
		</if>
		<if test="username != null">
			username = #{username},
		</if>
		<if test="realname != null">
			realname = #{realname},
		</if>
		<if test="login_time != null">
			login_time = #{login_time},
		</if>
		<if test="login_ip != null">
			login_ip = #{login_ip},
		</if>
	</set>
	where id = #{id}
</update>
<sql id="sqlwhere">
	<where>
		<if test="uid != null">
			 uid = #{uid}
		</if>
		<if test="username != null">
			 and username = #{username}
		</if>
		<if test="realname != null">
			and realname = #{realname}
		</if>
		<if test="login_time != null">
			 and login_time = #{login_time}
		</if>
		<if test="login_ip != null">
			 and login_ip = #{login_ip}
		</if>
		<if test="uids != null">
			 and uid in
			<foreach item="item" index="index" collection="uids"  open="(" separator="," close=")">
	            #{item}
 	        </foreach>
		</if>
	</where>
</sql>
<!-- 验证唯一 -->
<select id="judgeonly" parameterMap="LoginLogParam" resultType="java.util.HashMap">
	select distinct if(exists(select id from t_login_log
	<where>
		<if test="id != null">
			 id = #{id}
		</if>
	</where>
	
	),1,0) as flag from t_login_log
</select>

</mapper>
